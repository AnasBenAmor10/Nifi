version: '3'

services:
  nifi:
    build:
      dockerfile: nifi/Dockerfile.nifi
      context: .
    container_name: Nifi
    user: root
    environment:
      - JAVA_HOME=/usr/lib/jvm/jdk-21.0.3-bellsoft-x86_64 
      - NIFI_WEB_HTTPS_PORT=9443 
      - SINGLE_USER_CREDENTIALS_USERNAME=nifi
      - SINGLE_USER_CREDENTIALS_PASSWORD=nifi2024
      
    ports:
      - "9443:9443"  
    volumes:
      - nifi_content_repository:/opt/nifi/nifi-current/content_repository
      - nifi_database_repository:/opt/nifi/nifi-current/database_repository
      - nifi_flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
      - nifi_provenance_repository:/opt/nifi/nifi-current/provenance_repository
      - nifi_logs:/opt/nifi/nifi-current/logs
      - nifi_state:/opt/nifi/nifi-current/state
      - nifi_conf:/opt/nifi/nifi-current/conf
      - ./nifi-python-extensions/extracted_extensions/extensions:/opt/nifi/nifi-current/python_extensions
    networks:
      - chatbot

  nifi-registry:
    container_name: Nifi-registry
    build:
      dockerfile: nifi-registry/Dockerfile.registry
      context: .
    environment:
      - JAVA_HOME=/usr/lib/jvm/jdk-21.0.3-bellsoft-x86_64 
      - AUTH=tls 
      - KEYSTORE_PATH=/opt/nifi-registry/nifi-registry-current/certif/keystore.jks
      - KEYSTORE_TYPE=JKS 
      - KEYSTORE_PASSWORD=anasanas
      - TRUSTSTORE_PATH=/opt/nifi-registry/nifi-registry-current/certif/truststore.jks 
      - TRUSTSTORE_PASSWORD=anasanas
      - TRUSTSTORE_TYPE=JKS 
      - INITIAL_ADMIN_IDENTITY='CN=admin, O=orgax, OU=it, C=TN , S=tunis' 
    ports:
      - "18443:18443"  
    volumes:
      - nifi_registry_database:/opt/nifi-registry/database
    depends_on:
      - nifi
    networks:
      - chatbot

  streamlit:
    container_name: Streamlit
    restart: always
    build:
      dockerfile: streamlit/Dockerfile.streamlit
      context: .
    ports:
      - '8051:8051'  
    networks:
      - chatbot

volumes:
  nifi_content_repository:
  nifi_registry_database:
  nifi_database_repository:
  nifi_flowfile_repository:
  nifi_provenance_repository:
  nifi_logs:
  nifi_state:
  nifi_conf:

networks:
  chatbot:
    driver: bridge
